대구 전체 병원 cvc 파일 import 하기 전 생성해야 할 Table 생성문
CREATE TABLE d_hospital_V1 (
    H_Id INT PRIMARY KEY,
    H_Region VARCHAR(3),
    H_Name VARCHAR(27),
    H_Department VARCHAR(6),
    H_Categorie VARCHAR(45),
    Bed_Total smallint, 
    Bed_General smallint, 
    Bed_Psy smallint, 
    Bed_Nursing smallint, 
    Bed_Intensive tinyint,
    Bed_Isolation tinyint,
    Bed_Clean tinyint, 
    H_Phone_Number VARCHAR(14),
    H_Address VARCHAR(100),
    H_Latitude DECIMAL(10,8),
    H_Longitude DECIMAL(11,8)
);

-- 최근(p_insert_date_time) 확진된(p_covid19) 고위험군(p_high_risk_group) 검색 속도를 높이기 위해 세 개의 칼럼을 합한 인덱스 추가
CREATE INDEX idx_covid_risk_date ON patient(p_covid19, p_high_risk_group, p_insert_date_time);

-- 테이블과의 조인관계에 있는 user 테이블의 user_id 칼럼과 appointment 테이블의 user_id 칼럼
-- d_hospital_v1 테이블의 H_Id 칼럼과 appointment 테이블의 h_id 칼럼에 인덱스 설정
CREATE INDEX idx_user_user_id ON user(user_id);
CREATE INDEX idx_appointment_user_id ON appointment(user_id);
create index idx_appointment_h_id On appointment(h_id);
create index idx_d_hospital_h_id on d_hospital_v1(H_Id);

-- 코로나 감염자가 자신의 위치로부터 500m 이내인 코로나 미감염자 전체 출력
SELECT 
    A.p_name AS 환자명,
    A.p_phone AS 연락처,
    ROUND(ST_Distance_Sphere(POINT(A.p_longitude, A.p_latitude), POINT(B.p_longitude, B.p_latitude))) AS 거리_미터,
    CASE
        WHEN ST_Distance_Sphere(POINT(A.p_longitude, A.p_latitude), POINT(B.p_longitude, B.p_latitude)) < 50
            THEN '⚠️ 50m 이내'
        WHEN ST_Distance_Sphere(POINT(A.p_longitude, A.p_latitude), POINT(B.p_longitude, B.p_latitude)) < 100
            THEN '⚠️ 100m 이내'
        WHEN ST_Distance_Sphere(POINT(A.p_longitude, A.p_latitude), POINT(B.p_longitude, B.p_latitude)) < 200
            THEN '⚠️ 200m 이내'
        WHEN ST_Distance_Sphere(POINT(A.p_longitude, A.p_latitude), POINT(B.p_longitude, B.p_latitude)) < 300
            THEN '⚠️ 300m 이내'
        WHEN ST_Distance_Sphere(POINT(A.p_longitude, A.p_latitude), POINT(B.p_longitude, B.p_latitude)) < 400
            THEN '⚠️ 400m 이내'
        WHEN ST_Distance_Sphere(POINT(A.p_longitude, A.p_latitude), POINT(B.p_longitude, B.p_latitude)) < 500
            THEN '⚠️ 500m 이내'
        ELSE '❌ 범위 초과'
    END AS 거리_범위
FROM patient A
JOIN (SELECT p_longitude, p_latitude FROM patient WHERE p_covid19 = 1 ORDER BY p_insert_date_time DESC
    LIMIT 1 ) B
ON ST_Distance_Sphere(POINT(A.p_longitude, A.p_latitude), POINT(B.p_longitude, B.p_latitude)) < 500
WHERE A.p_covid19 = 0 OR A.p_covid19 = 2 
ORDER BY 거리_미터 ASC;

-- patient 테이블의 증상 정보만 모아서 뷰 생성
CREATE VIEW SymptomsView AS
SELECT p_id, p_user_id, p_covid19, p_taking_pill, p_nose, 
p_cough, p_pain, p_diarrhea, p_high_risk_group, p_vas
FROM patient;
SELECT * FROM SymptomsView;
select * from user;

-- patient 테이블의 주소 및 위치 정보를 뷰로 생성
CREATE VIEW LocationView AS
SELECT p_id, p_user_id, p_address1, p_address2, 
p_longitude, p_latitude
FROM Patient;
SELECT * FROM LocationView;

-- patient 테이블의 인적사항을 모아 뷰 생성
CREATE VIEW PatientInfoView AS
SELECT p_id p_user_id, p_name, p_gender, p_reg_num, 
p_phone, p_age, p_agreement, p_insert_date_time
FROM patient;
SELECT * FROM PatientInfoView;

-- 테이블별 용량 확인 (데이터 + 인덱스 크기)
SELECT 
    table_name AS 프로젝트,
    ROUND(data_length / 1024 / 1024, 2) AS 데이터_MB,
    ROUND(index_length / 1024 / 1024, 2) AS 인덱스_MB,
    ROUND((data_length + index_length) / 1024 / 1024, 2) AS 총_용량_MB
FROM information_schema.tables
WHERE table_schema = 'test_db';


-- 전체 DB 용량 조회
SELECT 
    table_schema AS 데이터베이스,
    ROUND(SUM(data_length) / 1024 / 1024, 2) AS 총_데이터_MB,
    ROUND(SUM(index_length) / 1024 / 1024, 2) AS 총_인덱스_MB,
    ROUND(SUM(data_length + index_length) / 1024 / 1024, 2) AS 총_합계_MB
FROM information_schema.tables
GROUP BY table_schema;

--  인덱스 정확도 개선 후 측정
ANALYZE TABLE patient, user;

-- 각 병상 칼럼별 최댓값인 행 출력
SELECT h_name, h_department, Bed_clean FROM d_hospital_v1 ORDER BY Bed_cleanappointment DESC LIMIT 1;
